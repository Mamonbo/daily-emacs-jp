#+BLOG: rubikitch
#+POSTID: 518
#+DATE: [2014-10-26 Sun 08:55]
#+PERMALINK: relative-line-numbers
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil \n:t -:nil
#+ISPAGE: nil
#+DESCRIPTION:
# (progn (erase-buffer)(find-file-hook--org2blog/wp-mode))
#+BLOG: rubikitch
#+CATEGORY: Emacs
#+EL_PKG_NAME: relative-line-numbers
#+EL_TAGS: emacs, emacs lisp %p, elisp %p, emacs %f %p, emacs %p 使い方, emacs %p 設定, emacs パッケージ %p, relate:ace-jump-mode, emacs スクリーンショット %p, emacs 相対行番号, emacs 前後の行, emacs 数引数 使い方
#+EL_TITLE: Emacs Lisp Elisp パッケージ インストール 設定 使い方 スクリーンショット
#+EL_TITLE0: カーソル前後の行を一瞬で処理する3つの方法！
#+begin: org2blog
#+DESCRIPTION: MELPAのEmacs Lispパッケージrelative-line-numbersの紹介
#+MYTAGS: package:relative-line-numbers, emacs 使い方, emacs コマンド, emacs, emacs lisp relative-line-numbers, elisp relative-line-numbers, emacs melpa relative-line-numbers, emacs relative-line-numbers 使い方, emacs relative-line-numbers 設定, emacs パッケージ relative-line-numbers, relate:ace-jump-mode, emacs スクリーンショット relative-line-numbers, emacs 相対行番号, emacs 前後の行, emacs 数引数 使い方
#+TITLE: emacs relative-line-numbers.el : カーソル前後の行を一瞬で処理する3つの方法！ | MELPA Emacs Lisp Elisp パッケージ インストール 設定 使い方 スクリーンショット
#+BEGIN_HTML
<table>
<tr><td>パッケージ名</td><td>relative-line-numbers</td></tr>
<tr><td>概要(原文)</td><td>Display relative line numbers on the margin</td></tr>
<tr><td>リポジトリ</td><td><a href="http://melpa.org/">MELPA</a></td></tr>
<tr><td>取得先</td><td><a href="https://github.com/Fanael/relative-line-numbers">https://github.com/Fanael/relative-line-numbers</a></td></tr>
<tr><td>バージョン</td><td>20141018.1252</td></tr>
<tr><td>関連記事</td><td><a href="http://rubikitch.com/tag/package:relative-line-numbers/">package:relative-line-numbers</a> <a href="http://rubikitch.com/tag/package:ace-jump-mode/">package:ace-jump-mode</a></td></tr>
</table>
<br />
#+END_HTML
[[http://rubikitch.com/2014/10/20/relative-line-numbers/][先日紹介]] した *relative-line-numbers.el* ですが、
便利な使い方を教えていただいたので記事にします。

これは相対行番号、つまり現在行からの距離を
左端に表示するelispです。

これが何に役立つかというと、 *数引数* 付きのC-p/C-n/C-kです。

この行数指定するときに相対行番号が書いてあると
ひと目でわかって、すぐにターゲット行がわかります！

C-pとC-nに数引数C-uをつければ、その行数だけ
前後の行に移動します。

たとえば4行前に行くときはC-u 4 C-pと操作します。

ここまでは知っている人が多いと思いますが、実は
「C-数字」や「M-数字」でも数引数がつけられます。

C-u 4 C-pの場合C-4 C-pで同じ効果です。

Ctrlを離さずに済むので楽ですね。

逆にC-4 C-nで4行後に移動します。

C-N C-kは現在行からN行kill(*kill-ring* に入れる)します。

たとえばC-2 C-kで現在行と次の行をkillします。

こういう操作を行うのにrelative-line-numbers.elは役に立ちます。

個人的には [[http://rubikitch.com/2014/10/09/ace-jump-mode/][M-x ace-jump-line-mode]] や *isearch* を使うことが多いので、
あまり使っていない使い方でした。

標準状態のEmacsだと使えなさそうなコマンドも、
パッケージ追加により生き返るのはおもしろいですね！

@junkwさん、@imunolionさん、ありがとうございます。
** relative-line-numbers インストール
このパッケージはmelpaにあるので [[http://rubikitch.com/package-initialize][パッケージの初期設定]] を行ってください。

M-x package-refresh-contents
M-x package-install relative-line-numbers


#+end:
** 概要                                                             :noexport:
[[http://rubikitch.com/2014/10/20/relative-line-numbers/][先日紹介]] した *relative-line-numbers.el* ですが、
便利な使い方を教えていただいたので記事にします。

これは相対行番号、つまり現在行からの距離を
左端に表示するelispです。

これが何に役立つかというと、 *数引数* 付きのC-p/C-n/C-kです。

この行数指定するときに相対行番号が書いてあると
ひと目でわかって、すぐにターゲット行がわかります！

C-pとC-nに数引数C-uをつければ、その行数だけ
前後の行に移動します。

たとえば4行前に行くときはC-u 4 C-pと操作します。

ここまでは知っている人が多いと思いますが、実は
「C-数字」や「M-数字」でも数引数がつけられます。

C-u 4 C-pの場合C-4 C-pで同じ効果です。

Ctrlを離さずに済むので楽ですね。

逆にC-4 C-nで4行後に移動します。

C-N C-kは現在行からN行kill(*kill-ring* に入れる)します。

たとえばC-2 C-kで現在行と次の行をkillします。

こういう操作を行うのにrelative-line-numbers.elは役に立ちます。

個人的には [[http://rubikitch.com/2014/10/09/ace-jump-mode/][M-x ace-jump-line-mode]] や *isearch* を使うことが多いので、
あまり使っていない使い方でした。

標準状態のEmacsだと使えなさそうなコマンドも、
パッケージ追加により生き返るのはおもしろいですね！

@junkwさん、@imunolionさん、ありがとうございます。

** 設定 [[http://rubikitch.com/f/141020140339.relative-line-numbers.el][141020140339.relative-line-numbers.el(以下のコードと同一)]]
#+BEGIN: include :file "/r/sync/junk/141020/141020140339.relative-line-numbers.el"
#+BEGIN_SRC fundamental
(global-relative-line-numbers-mode)
#+END_SRC

#+END:

** 実行方法
#+BEGIN_EXAMPLE
$ wget http://rubikitch.com/f/141020140339.relative-line-numbers.el
$ emacs -Q -f package-initialize -l 141020140339.relative-line-numbers.el
#+END_EXAMPLE

# (progn (forward-line 1)(shell-command "screenshot-time.rb org_template" t))
http://rubikitch.com/f/20141020140507.png
Fig1: 相対行番号！
