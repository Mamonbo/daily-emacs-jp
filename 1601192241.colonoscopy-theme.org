#+BLOG: rubikitch
#+POSTID: 2342
#+DATE: [2016-01-19 Tue 22:41]
#+PERMALINK: colonoscopy-theme
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil \n:t -:nil
#+ISPAGE: nil
#+DESCRIPTION:
# (progn (erase-buffer)(find-file-hook--org2blog/wp-mode))
#+BLOG: rubikitch
#+CATEGORY: Emacs, theme
#+EL_PKG_NAME: colonoscopy-theme
#+EL_TAGS: emacs, %p, %p.el, emacs lisp %p, elisp %p, emacs %f %p, emacs %p 使い方, emacs %p 設定, emacs パッケージ %p, emacs %p スクリーンショット, color-theme, カラーテーマ
#+EL_TITLE: Emacs Lisp Elisp パッケージ インストール 設定 使い方 スクリーンショット
#+EL_TITLE0: ダークなカラーテーマ
#+EL_URL: 
#+begin: org2blog
#+DESCRIPTION: MELPAのEmacs Lispパッケージcolonoscopy-themeの紹介
#+MYTAGS: package:colonoscopy-theme, emacs 使い方, emacs コマンド, emacs, colonoscopy-theme, colonoscopy-theme.el, emacs lisp colonoscopy-theme, elisp colonoscopy-theme, emacs melpa colonoscopy-theme, emacs colonoscopy-theme 使い方, emacs colonoscopy-theme 設定, emacs パッケージ colonoscopy-theme, emacs colonoscopy-theme スクリーンショット, color-theme, カラーテーマ
#+TAGS: package:colonoscopy-theme, emacs 使い方, emacs コマンド, emacs, colonoscopy-theme, colonoscopy-theme.el, emacs lisp colonoscopy-theme, elisp colonoscopy-theme, emacs melpa colonoscopy-theme, emacs colonoscopy-theme 使い方, emacs colonoscopy-theme 設定, emacs パッケージ colonoscopy-theme, emacs colonoscopy-theme スクリーンショット, color-theme, カラーテーマ, Emacs, theme, colonoscopy--theme.el
#+TITLE: emacs colonoscopy-theme.el : ダークなカラーテーマ | MELPA Emacs Lisp Elisp パッケージ インストール 設定 使い方 スクリーンショット
#+BEGIN_HTML
<table>
<tr><td>パッケージ名</td><td>colonoscopy-theme</td></tr>
<tr><td>概要(原文)</td><td>an Emacs 24 theme based on Colonoscopy (tmTheme)</td></tr>
<tr><td>リポジトリ</td><td><a href="http://melpa.org/">MELPA</a></td></tr>
<tr><td>取得先</td><td><a href="https://github.com/emacsfodder/emacs-colonoscopy-theme">https://github.com/emacsfodder/emacs-colonoscopy-theme</a></td></tr>
<tr><td>バージョン</td><td>20141115.2301</td></tr>
<tr><td>関連記事</td><td><a href="http://rubikitch.com/tag/package:colonoscopy-theme/">package:colonoscopy-theme</a> </td></tr>
</table>
<br />
#+END_HTML
*colonoscopy--theme.el* は、以下のパッケージに対応したカラーテーマです。
- linum
- link
- button
- header-line
- mode-line
- isearch
- tooltip
- js3
- cua-rectangle
- magit
- flyspell-mode
- flymake-mode
- git-gutter
- diff
- font-lock
- rainbow-delimiters
** colonoscopy-theme インストール
このパッケージはmelpaにあるので [[http://rubikitch.com/package-initialize][パッケージの初期設定]] を行ってください。

M-x package-refresh-contents
M-x package-install colonoscopy-theme


#+end:
** 概要                                                             :noexport:
*colonoscopy--theme.el* は、以下のパッケージに対応したカラーテーマです。
- linum
- link
- button
- header-line
- mode-line
- isearch
- tooltip
- js3
- cua-rectangle
- magit
- flyspell-mode
- flymake-mode
- git-gutter
- diff
- font-lock
- rainbow-delimiters
** スクリーンショット
# (save-window-excursion (async-shell-command "emacs-test -eval '(load-theme (quote colonoscopy) t)'"))
# (progn (forward-line 1)(shell-command "screenshot-time.rb org_theme_template" t))
#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20160119224337.png]]
Fig1: emacs-lisp-mode

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20160119224342.png]]
Fig2: magit

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20160119224343.png]]
Fig3: grep

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20160119224345.png]]
Fig4: outline-mode

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20160119224346.png]]
Fig5: org-mode

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20160119224348.png]]
Fig6: dired

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20160119224350.png]]
Fig7: web-mode

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20160119224351.png]]
Fig8: markdown-mode

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20160119224354.png]]
Fig9: helm


#+ATTR_HTML: :width 480
[[https://github.com/emacsfodder/emacs-colonoscopy-theme/raw/master/colonoscopy-theme.png]]
Fig10: 本家スクリーンショット



** 設定
#+BEGIN_SRC fundamental
(load-theme 'colonoscopy- t)
#+END_SRC

** 実行方法
#+BEGIN_EXAMPLE
$ emacs -Q -f package-initialize -eval '(load-theme (quote colonoscopy-) t)'
#+END_EXAMPLE

# (progn (forward-line 1)(shell-command "screenshot-time.rb org_template" t))
