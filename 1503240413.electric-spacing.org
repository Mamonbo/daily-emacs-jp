#+BLOG: rubikitch
#+POSTID: 1362
#+DATE: [2015-03-24 Tue 04:13]
#+PERMALINK: electric-spacing
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil \n:t -:nil
#+ISPAGE: nil
#+DESCRIPTION:
# (progn (erase-buffer)(find-file-hook--org2blog/wp-mode))
#+BLOG: rubikitch
#+CATEGORY: Emacs
#+EL_PKG_NAME: electric-spacing
#+EL_TAGS: emacs, %p, %p.el, emacs lisp %p, elisp %p, emacs %f %p, emacs %p 使い方, emacs %p 設定, emacs パッケージ %p, emacs %p スクリーンショット, relate:smartchr, relate:key-combo, emacs 自動スペース, emacs 読みやすいコードを書く, emacs 前後にスペースを自動で挿入, emacs 両端にスペース, emacs smartchr, emacs key-combo, emacs キーを押す回数で挿入文字が変わる, 見栄えを良くする, スペースを入力する手間を省く, 手っ取り早く入力する, 同じキーを連続して入力したときの動作を変更, relate:electric-operator
#+EL_TITLE: Emacs Lisp Elisp パッケージ インストール 設定 使い方 スクリーンショット
#+EL_TITLE0: 演算子(=や+=)の前後に自動でスペースを入れる
#+EL_URL: 
#+begin: org2blog
#+DESCRIPTION: MELPAのEmacs Lispパッケージelectric-spacingの紹介
#+MYTAGS: package:electric-spacing, emacs 使い方, emacs コマンド, emacs, electric-spacing, electric-spacing.el, emacs lisp electric-spacing, elisp electric-spacing, emacs melpa electric-spacing, emacs electric-spacing 使い方, emacs electric-spacing 設定, emacs パッケージ electric-spacing, emacs electric-spacing スクリーンショット, relate:smartchr, relate:key-combo, emacs 自動スペース, emacs 読みやすいコードを書く, emacs 前後にスペースを自動で挿入, emacs 両端にスペース, emacs smartchr, emacs key-combo, emacs キーを押す回数で挿入文字が変わる, 見栄えを良くする, スペースを入力する手間を省く, 手っ取り早く入力する, 同じキーを連続して入力したときの動作を変更, relate:electric-operator
#+TAGS: package:electric-spacing, emacs 使い方, emacs コマンド, emacs, electric-spacing, electric-spacing.el, emacs lisp electric-spacing, elisp electric-spacing, emacs melpa electric-spacing, emacs electric-spacing 使い方, emacs electric-spacing 設定, emacs パッケージ electric-spacing, emacs electric-spacing スクリーンショット, relate:smartchr, relate:key-combo, emacs 自動スペース, emacs 読みやすいコードを書く, emacs 前後にスペースを自動で挿入, emacs 両端にスペース, emacs smartchr, emacs key-combo, emacs キーを押す回数で挿入文字が変わる, 見栄えを良くする, スペースを入力する手間を省く, 手っ取り早く入力する, 同じキーを連続して入力したときの動作を変更, relate:electric-operator, Emacs, や+, や+, electric-spacing.el, M-x electric-spacing-mode, electric-spacing.el, M-x electric-spacing-mode
#+TITLE: emacs electric-spacing.el : 演算子(=や+=)の前後に自動でスペースを入れる | MELPA Emacs Lisp Elisp パッケージ インストール 設定 使い方 スクリーンショット
#+BEGIN_HTML
<table>
<tr><td>パッケージ名</td><td>electric-spacing</td></tr>
<tr><td>概要(原文)</td><td>Insert operators with surrounding spaces smartly</td></tr>
<tr><td>リポジトリ</td><td><a href="http://melpa.org/">MELPA</a></td></tr>
<tr><td>取得先</td><td><a href="https://github.com/xwl/electric-spacing">https://github.com/xwl/electric-spacing</a></td></tr>
<tr><td>バージョン</td><td>20150621.642</td></tr>
<tr><td>関連記事</td><td><a href="http://rubikitch.com/tag/package:electric-spacing/">package:electric-spacing</a> <a href="http://rubikitch.com/tag/package:smartchr/">package:smartchr</a> <a href="http://rubikitch.com/tag/package:key-combo/">package:key-combo</a> <a href="http://rubikitch.com/tag/package:electric-operator/">package:electric-operator</a></td></tr>
</table>
<br />
#+END_HTML
コーディングをしていて、「=」の間にスペースを入れるとき
手動でスペースを入力するのはちょっと面倒です。

自動で入力してもいいんじゃないでしょうか？

そこで、 *electric-spacing.el* の登場です。

*M-x electric-spacing-mode* というマイナーモードを
有効にすると使えます。

「=」を入力すると前後にスペースが入りますが、
「==」を入力したときには「==」の前後にスペースが入るように
賢い挙動をしてくれます。

# (progn (forward-line 1)(shell-command "screenshot-time.rb org_template" t))
#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150324042754.png]]
Fig1: スペースを入力しないでも自動で入れてくれる！



グローバルマイナーモードではないので
以下のように使う言語ごとにフックを設定してください。

#+BEGIN_SRC emacs-lisp :results silent
(add-hook 'python-mode-hook #'electric-spacing-mode)
#+END_SRC

** electric-spacing インストール
このパッケージはmelpaにあるので [[http://rubikitch.com/package-initialize][パッケージの初期設定]] を行ってください。

M-x package-refresh-contents
M-x package-install electric-spacing


#+end:
** 概要                                                             :noexport:
コーディングをしていて、「=」の間にスペースを入れるとき
手動でスペースを入力するのはちょっと面倒です。

自動で入力してもいいんじゃないでしょうか？

そこで、 *electric-spacing.el* の登場です。

*M-x electric-spacing-mode* というマイナーモードを
有効にすると使えます。

「=」を入力すると前後にスペースが入りますが、
「==」を入力したときには「==」の前後にスペースが入るように
賢い挙動をしてくれます。

# (progn (forward-line 1)(shell-command "screenshot-time.rb org_template" t))
#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150324042754.png]]
Fig2: スペースを入力しないでも自動で入れてくれる！



グローバルマイナーモードではないので
以下のように使う言語ごとにフックを設定してください。

#+BEGIN_SRC emacs-lisp :results silent
(add-hook 'python-mode-hook #'electric-spacing-mode)
#+END_SRC


** 類似品たち
日本では[[http://tech.kayac.com/archive/emacs-tips-smartchr.html][IMAKADOさんのsmartchr.el]] が有名ですが、
実はこっちの方が先輩だったりします。

smartchr.elは2009年登場ですが、
こっちはsmart-operator.elという名前で2006年に登場しました。

やはり考えていることは同じですよね。

smartchr.elの後継として[[http://d.hatena.ne.jp/uk-ar/20111208/1322572618][uk-arさんのkey-combo.el]] もあります。
** 対応メジャーモード
electric-spacing.elは対応メジャーモードが
関数内にハードコーディングされています。

コードを見たところ、以下のメジャーモードに特別に対応しています。

- cc-mode
  - c-mode
  - java-mode
  - c++-mode
- emacs-lisp-mode
- lisp-mode
- lisp-interaction-mode
- scheme-mode
- sgml-mode
- haskell-mode
- python-mode
- ruby-mode
- js-mode
- js2-mode
- perl-mode
- cperl-mode




# /r/sync/screenshots/20150324042754.png http://rubikitch.com/wp-content/uploads/2015/03/wpid-20150324042754.png
