#+BLOG: rubikitch
#+POSTID: 2371
#+DATE: [2016-01-31 Sun 05:46]
#+PERMALINK: hamburg-theme
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil \n:t -:nil
#+ISPAGE: nil
#+DESCRIPTION:
# (progn (erase-buffer)(find-file-hook--org2blog/wp-mode))
#+BLOG: rubikitch
#+CATEGORY: Emacs, theme
#+EL_PKG_NAME: hamburg-theme
#+EL_TAGS: emacs, %p, %p.el, emacs lisp %p, elisp %p, emacs %f %p, emacs %p 使い方, emacs %p 設定, emacs パッケージ %p, emacs %p スクリーンショット, color-theme, カラーテーマ
#+EL_TITLE: Emacs Lisp Elisp パッケージ インストール 設定 使い方 スクリーンショット
#+EL_TITLE0: ダークなカラーテーマ
#+EL_URL: 
#+begin: org2blog
#+DESCRIPTION: MELPAのEmacs Lispパッケージhamburg-themeの紹介
#+MYTAGS: package:hamburg-theme, emacs 使い方, emacs コマンド, emacs, hamburg-theme, hamburg-theme.el, emacs lisp hamburg-theme, elisp hamburg-theme, emacs melpa hamburg-theme, emacs hamburg-theme 使い方, emacs hamburg-theme 設定, emacs パッケージ hamburg-theme, emacs hamburg-theme スクリーンショット, color-theme, カラーテーマ
#+TAGS: package:hamburg-theme, emacs 使い方, emacs コマンド, emacs, hamburg-theme, hamburg-theme.el, emacs lisp hamburg-theme, elisp hamburg-theme, emacs melpa hamburg-theme, emacs hamburg-theme 使い方, emacs hamburg-theme 設定, emacs パッケージ hamburg-theme, emacs hamburg-theme スクリーンショット, color-theme, カラーテーマ, Emacs, theme, hamburg-theme.el
#+TITLE: emacs hamburg-theme.el : ダークなカラーテーマ | MELPA Emacs Lisp Elisp パッケージ インストール 設定 使い方 スクリーンショット
#+BEGIN_HTML
<table>
<tr><td>パッケージ名</td><td>hamburg-theme</td></tr>
<tr><td>概要(原文)</td><td>Color Theme with a dark blue background.</td></tr>
<tr><td>リポジトリ</td><td><a href="http://melpa.org/">MELPA</a></td></tr>
<tr><td>取得先</td><td><a href="https://github.com/mswift42/hamburg-theme">https://github.com/mswift42/hamburg-theme</a></td></tr>
<tr><td>バージョン</td><td>20160122.2340</td></tr>
<tr><td>関連記事</td><td><a href="http://rubikitch.com/tag/package:hamburg-theme/">package:hamburg-theme</a> </td></tr>
</table>
<br />
#+END_HTML
*hamburg-theme.el* は、以下のパッケージに対応したカラーテーマです。
- font-lock
- hl-line
- show-paren
- isearch
- mode-line
- link
- org
- font-latex
- ido
- gnus
- mu4e
- ffap
- js2-mode
- js3-mode
- auto-complete
- info
- icomplete+
- undo-tree
- slime
- rainbow-delimiters
- magit
- term
- helm
- company
- web-mode
- jde
** hamburg-theme インストール
このパッケージはmelpaにあるので [[http://rubikitch.com/package-initialize][パッケージの初期設定]] を行ってください。

M-x package-refresh-contents
M-x package-install hamburg-theme


#+end:
** 概要                                                             :noexport:
*hamburg-theme.el* は、以下のパッケージに対応したカラーテーマです。
- font-lock
- hl-line
- show-paren
- isearch
- mode-line
- link
- org
- font-latex
- ido
- gnus
- mu4e
- ffap
- js2-mode
- js3-mode
- auto-complete
- info
- icomplete+
- undo-tree
- slime
- rainbow-delimiters
- magit
- term
- helm
- company
- web-mode
- jde
** スクリーンショット
# (save-window-excursion (async-shell-command "emacs-test -eval '(load-theme (quote hamburg) t)'"))
# (progn (forward-line 1)(shell-command "screenshot-time.rb org_theme_template" t))
#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20160131054903.png]]
Fig1: emacs-lisp-mode

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20160131054907.png]]
Fig2: magit

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20160131054909.png]]
Fig3: grep

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20160131054911.png]]
Fig4: outline-mode

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20160131054913.png]]
Fig5: org-mode

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20160131054914.png]]
Fig6: dired

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20160131054916.png]]
Fig7: web-mode

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20160131054918.png]]
Fig8: markdown-mode

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20160131054921.png]]
Fig9: helm


#+ATTR_HTML: :width 480
[[https://github.com/mswift42/hamburg-theme/raw/master/emacshamburgjsclojure.png]]
Fig10: 本家スクリーンショット

#+ATTR_HTML: :width 480
[[https://github.com/mswift42/hamburg-theme/raw/master/emacshamburgpyruby.png]]
Fig11: 本家スクリーンショット



** 設定
#+BEGIN_SRC fundamental
(load-theme 'hamburg t)
#+END_SRC

** 実行方法
#+BEGIN_EXAMPLE
$ emacs -Q -f package-initialize -eval '(load-theme (quote hamburg) t)'
#+END_EXAMPLE

# (progn (forward-line 1)(shell-command "screenshot-time.rb org_template" t))
