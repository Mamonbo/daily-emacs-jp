#+BLOG: rubikitch
#+POSTID: 1833
#+DATE: [2015-07-16 Thu 01:38]
#+PERMALINK: ffap-dired
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil \n:t -:nil
#+ISPAGE: nil
#+DESCRIPTION:
# (progn (erase-buffer)(find-file-hook--org2blog/wp-mode))
#+BLOG: rubikitch
#+CATEGORY: Emacs, dired, 
#+DESCRIPTION: C-x C-fでカーソル位置のファイル・URL・dired(ワイルドカード対応)を開くようにする設定
#+MYTAGS: package:ffap, package:dired, カーソル位置のファイルを開く, ワイルドカードをdired, URLをC-x C-fで開く
#+TITLE: C-x C-fでカーソル位置のファイル・URLを開いたりワイルドカードをdiredで開いたり
#+begin: org2blog-tags
#+TAGS: package:ffap, package:dired, カーソル位置のファイルを開く, ワイルドカードをdired, URLをC-x C-fで開く, Emacs, dired, , ffap, browse-url, ffap-pass-wildcards-to-dired, minibuffer-local-filename-completion-map, C-x C-f, C-x d
#+end:
標準パッケージ *ffap* は、C-x C-fなどをカイゼンします。

カーソル位置のファイル名をデフォルトにしてくれますし、
URLを指定すれば *browse-url* でブラウザで開いてくれます。

かなり有名な機能なのでご存じの方が多いでしょうけど、
もし知らないのであれば今すぐ設定すれば幸せになれます。

さらに驚くべき機能を発見しました！

それは、変数 *ffap-pass-wildcards-to-dired* を設定し
C-x C-fの後にワイルドカードを指定すれば
ワイルドカードにマッチするファイルをdiredで示してくれるのです！！

ただ、これだけでは不十分でワイルドカード「?」を入力しよとすると
補完候補が表示されてしまうので、 *minibuffer-local-filename-completion-map*
の設定も必要となります。

これで *C-x C-f* が *C-x d* の機能も含むようになりました。

#+BEGIN: include :file "/r/sync/junk/150716/150716014230.ffap-dired.el"
#+BEGIN_SRC fundamental
;;; ファイル名補完キーマップで?をそのまま入力できるようにする
(define-key minibuffer-local-filename-completion-map (kbd "?") nil)
;;; ffapでワイルドカードを指定するとdiredを開くようにする
(setq ffap-pass-wildcards-to-dired t)
;;; C-x C-fなどをffap関係のコマンドに割り当てる
(ffap-bindings)
#+END_SRC

#+END:

以前からC-x C-fでdiredを開きたくて
そのことを知らずに手元に10行のコードを書きましたが、
あっさり捨ててffapに回帰することにしました。

elispに慣れているのでその程度ならば調べるよりもコードを書く方が早いのですが
標準機能とはいえ馬鹿になりませんね。

自分もまだまだです。


# (progn (forward-line 1)(shell-command "screenshot-time.rb org_template" t))
