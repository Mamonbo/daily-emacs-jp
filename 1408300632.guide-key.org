#+BLOG: rubikitch
#+POSTID: 238
#+DATE: [2014-08-30 Sat 06:32]
#+PERMALINK: guide-key
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil \n:t
#+ISPAGE: nil
#+DESCRIPTION:
# (progn (erase-buffer)(find-file-hook--org2blog/wp-mode))
#+BLOG: rubikitch
#+CATEGORY: Emacs
#+EL_PKG_NAME: guide-key
#+EL_TAGS: emacs, emacs lisp %p, elisp %p, emacs %f %p, emacs %p 使い方, emacs %p 設定, emacs パッケージ %p, emacs %p スクリーンショット, emacs describe-key, emacs describe-bindings, emacs キー操作, Emacs キーバインド, Emacs キーが覚えられない, Emacs one-key.el, emacs descbinds, emacs C-h b, emacs f1 b, emacs popwin, relate:helm-descbinds, emacs org-mode キー, emacs outline-minor-mode キー, relate:org, emacs rectangle, emacs register, emacs レジスタ, relate:which-key
#+EL_TITLE: Emacs Lisp Elisp パッケージ インストール 設定 使い方 スクリーンショット
#+EL_TITLE0: もう迷子にならない！今のEmacsは自動的に次のキー操作を教えてくれるゾ！！
#+begin: org2blog
#+DESCRIPTION: MELPAのEmacs Lispパッケージguide-keyの紹介
#+MYTAGS: package:guide-key, emacs 使い方, emacs コマンド, emacs, emacs lisp guide-key, elisp guide-key, emacs melpa guide-key, emacs guide-key 使い方, emacs guide-key 設定, emacs パッケージ guide-key, emacs guide-key スクリーンショット, emacs describe-key, emacs describe-bindings, emacs キー操作, Emacs キーバインド, Emacs キーが覚えられない, Emacs one-key.el, emacs descbinds, emacs C-h b, emacs f1 b, emacs popwin, relate:helm-descbinds, emacs org-mode キー, emacs outline-minor-mode キー, relate:org, emacs rectangle, emacs register, emacs レジスタ, relate:which-key
#+TAGS: package:guide-key, emacs 使い方, emacs コマンド, emacs, emacs lisp guide-key, elisp guide-key, emacs melpa guide-key, emacs guide-key 使い方, emacs guide-key 設定, emacs パッケージ guide-key, emacs guide-key スクリーンショット, emacs describe-key, emacs describe-bindings, emacs キー操作, Emacs キーバインド, Emacs キーが覚えられない, Emacs one-key.el, emacs descbinds, emacs C-h b, emacs f1 b, emacs popwin, relate:helm-descbinds, emacs org-mode キー, emacs outline-minor-mode キー, relate:org, emacs rectangle, emacs register, emacs レジスタ, relate:which-key, Emacs, org-mode, helm-descbinds.el, org-mode, helm-descbinds.el
#+TITLE: emacs guide-key.el : もう迷子にならない！今のEmacsは自動的に次のキー操作を教えてくれるゾ！！ | MELPA Emacs Lisp Elisp パッケージ インストール 設定 使い方 スクリーンショット
#+BEGIN_HTML
<table>
<tr><td>パッケージ名</td><td>guide-key</td></tr>
<tr><td>概要(原文)</td><td>Guide the following key bindings automatically and dynamically</td></tr>
<tr><td>リポジトリ</td><td><a href="http://melpa.org/">MELPA</a></td></tr>
<tr><td>取得先</td><td><a href="https://github.com/kai2nenobu/guide-key">https://github.com/kai2nenobu/guide-key</a></td></tr>
<tr><td>バージョン</td><td>20150107.2235</td></tr>
<tr><td>関連記事</td><td><a href="http://rubikitch.com/tag/package:guide-key/">package:guide-key</a> <a href="http://rubikitch.com/tag/package:helm-descbinds/">package:helm-descbinds</a> <a href="http://rubikitch.com/tag/package:org/">package:org</a> <a href="http://rubikitch.com/tag/package:which-key/">package:which-key</a></td></tr>
</table>
<br />
#+END_HTML
<2015-09-14 Mon>[[http://rubikitch.com/2015/09/14/which-key/][which-key.elがguide-key.elの改良版です]]

guide-key.elはプレフィクスキーの次のキー操作を
ポップアップで教えてくれるEmacs Lispです。

Emacsには無数にキーが定義されていて、すべてを把握することはほぼ不可能です。

そこで、プレフィクスキーまで押しても次なんだったかな…
と思うことはよくありますね。

特にC-x rのregister/rectangle系はものすごい多いです。

これを救ってくれるのがguide-key.elなのです。

メジャーモードやマイナーモードにも対応していて、
たとえば *org-mode* のC-c C-xでも問題ありません。


これを使わないとわざわざ<f1> bなどで
キーバインドを調べる必要があって面倒です。

一定時間(デフォルトで1秒)以内に操作すればポップアップしないので、
毎回ポップアップされる煩わしさはありません。

one-key.elを使っている人は乗り換えてみてはいかがでしょうか？

*helm-descbinds.el* と組み合わせると
キーバインドに悩むことはなくなるでしょう。
** guide-key インストール
このパッケージはmelpaにあるので [[http://rubikitch.com/package-initialize][パッケージの初期設定]] を行ってください。

M-x package-refresh-contents
M-x package-install guide-key


#+end:
** 概要                                                             :noexport:
<2015-09-14 Mon>[[http://rubikitch.com/2015/09/14/which-key/][which-key.elがguide-key.elの改良版です]]

guide-key.elはプレフィクスキーの次のキー操作を
ポップアップで教えてくれるEmacs Lispです。

Emacsには無数にキーが定義されていて、すべてを把握することはほぼ不可能です。

そこで、プレフィクスキーまで押しても次なんだったかな…
と思うことはよくありますね。

特にC-x rのregister/rectangle系はものすごい多いです。

これを救ってくれるのがguide-key.elなのです。

メジャーモードやマイナーモードにも対応していて、
たとえば *org-mode* のC-c C-xでも問題ありません。


これを使わないとわざわざ<f1> bなどで
キーバインドを調べる必要があって面倒です。

一定時間(デフォルトで1秒)以内に操作すればポップアップしないので、
毎回ポップアップされる煩わしさはありません。

one-key.elを使っている人は乗り換えてみてはいかがでしょうか？

*helm-descbinds.el* と組み合わせると
キーバインドに悩むことはなくなるでしょう。
** 設定 [[http://rubikitch.com/f/140830063637.guide-key.el][140830063637.guide-key.el(以下のコードと同一)]]
#+BEGIN: include :file "/r/sync/junk/140830/140830063637.guide-key.el"
#+BEGIN_SRC fundamental
(require 'guide-key)
;;; guilde-keyを発動させるプレフィクスキー
(setq guide-key/guide-key-sequence
      '("C-x r" "C-x 4"                 ;global
        ;; org-modeではC-c C-xも対象にする
        (org-mode "C-c C-x")
        ;; outline-minor-modeではC-c @も対象にする
        (outline-minor-mode "C-c @")))

;;; コマンド名にこれらが含まれている場合はハイライトされる
(setq guide-key/highlight-command-regexp "rectangle\\|register\\|org-clock")
;;; 1秒後にポップアップされる(デフォルト)
;;; つまり1秒以内に操作すればポップアップされずに実行される
(setq guide-key/idle-delay 1.0)
;;; 下部にキー一覧を表示させる(デフォルトはright)
(setq guide-key/popup-window-position 'bottom)
;;; 文字の大きさを変更する(正の数で大きく、負の数で小さく)
(setq guide-key/text-scale-amount -2)
;;; 有効にする
(guide-key-mode 1)
#+END_SRC

#+END:

** 実行方法
#+BEGIN_EXAMPLE
$ wget http://rubikitch.com/f/140830063637.guide-key.el
$ emacs -Q -f package-initialize -l 140830063637.guide-key.el
#+END_EXAMPLE

# (progn (forward-line 1)(shell-command "screenshot-time.rb org_template" t))
http://rubikitch.com/f/20140830064808.png
Fig1: C-x 4

http://rubikitch.com/f/20140830064819.png
Fig2: C-x r
