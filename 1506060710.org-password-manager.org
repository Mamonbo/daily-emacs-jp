#+BLOG: rubikitch
#+POSTID: 1723
#+DATE: [2015-06-06 Sat 07:10]
#+PERMALINK: org-password-manager
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil \n:t -:nil
#+ISPAGE: nil
#+DESCRIPTION:
# (progn (erase-buffer)(find-file-hook--org2blog/wp-mode))
#+BLOG: rubikitch
#+CATEGORY: Emacs, org-mode, 
#+EL_PKG_NAME: org-password-manager
#+EL_TAGS: emacs, %p, %p.el, emacs lisp %p, elisp %p, emacs %f %p, emacs %p 使い方, emacs %p 設定, emacs パッケージ %p, emacs %p スクリーンショット, relate:id-manager, relate:passthword, パスワード管理, GNOME Keyring, Password Manager, Form Filler, Password Management, ロボフォーム, KeePass, Roboform, SplashID, 1Password, パスワード管理ソフト ID Manager, relate:auth-source, 
#+EL_TITLE: Emacs Lisp Elisp パッケージ インストール 設定 使い方 スクリーンショット
#+EL_TITLE0: org-mode de パスワードマネージャー
#+EL_URL: 
#+begin: org2blog
#+DESCRIPTION: MELPAのEmacs Lispパッケージorg-password-managerの紹介
#+MYTAGS: package:org-password-manager, emacs 使い方, emacs コマンド, emacs, org-password-manager, org-password-manager.el, emacs lisp org-password-manager, elisp org-password-manager, emacs melpa org-password-manager, emacs org-password-manager 使い方, emacs org-password-manager 設定, emacs パッケージ org-password-manager, emacs org-password-manager スクリーンショット, relate:id-manager, relate:passthword, パスワード管理, GNOME Keyring, Password Manager, Form Filler, Password Management, ロボフォーム, KeePass, Roboform, SplashID, 1Password, パスワード管理ソフト ID Manager, relate:auth-source, 
#+TAGS: package:org-password-manager, emacs 使い方, emacs コマンド, emacs, org-password-manager, org-password-manager.el, emacs lisp org-password-manager, elisp org-password-manager, emacs melpa org-password-manager, emacs org-password-manager 使い方, emacs org-password-manager 設定, emacs パッケージ org-password-manager, emacs org-password-manager スクリーンショット, relate:id-manager, relate:passthword, パスワード管理, GNOME Keyring, Password Manager, Form Filler, Password Management, ロボフォーム, KeePass, Roboform, SplashID, 1Password, パスワード管理ソフト ID Manager, relate:auth-source, , Emacs, org-mode, , org-password-manager.el, M-RET, C-c C-x P, org-set-property-and-value), M-x org-password-manager-get-username, M-x org-password-manager-get-password, org-agenda-files, M-x org-password-manager-generate-password, M-RET, C-c C-x P, org-set-property-and-value), M-x org-password-manager-get-username, M-x org-password-manager-get-password, org-agenda-files, M-x org-password-manager-generate-password
#+TITLE: emacs org-password-manager.el : org-mode de パスワードマネージャー | MELPA Emacs Lisp Elisp パッケージ インストール 設定 使い方 スクリーンショット
#+BEGIN_HTML
<table>
<tr><td>パッケージ名</td><td>org-password-manager</td></tr>
<tr><td>概要(原文)</td><td>Minimal password manager for Emacs Org Mode.</td></tr>
<tr><td>リポジトリ</td><td><a href="http://melpa.org/">MELPA</a></td></tr>
<tr><td>取得先</td><td><a href="https://github.com/leafac/org-password-manager">https://github.com/leafac/org-password-manager</a></td></tr>
<tr><td>バージョン</td><td>20150505.450</td></tr>
<tr><td>関連記事</td><td><a href="http://rubikitch.com/tag/package:org-password-manager/">package:org-password-manager</a> <a href="http://rubikitch.com/tag/package:id-manager/">package:id-manager</a> <a href="http://rubikitch.com/tag/package:passthword/">package:passthword</a> <a href="http://rubikitch.com/tag/package:auth-source/">package:auth-source</a></td></tr>
</table>
<br />
#+END_HTML
*org-password-manager.el* は、[[http://rubikitch.com/2015/03/29/passthword/][passthword.el(レビュー)]] や
[[http://rubikitch.com/2014/09/28/id-manager/][id-manager.el(レビュー)]] のようなパスワードマネージャーです。

特徴はorg-modeのプロパティ使っていることです。

プロパティは普段は非表示になっているので、
パスワードを隠すにはうってつけです。

でも、orgファイルそのものをemacs以外で見られたら意味がない？

大丈夫です。

~/org/password.org.gpgのように.gpgとつければ
GnuPGで暗号化してくれるので外からは見えません！

GnuPGのパスフレーズが事実上マスターパスワードになります。

password.org.gpgは以下のような内容です。

#+BEGIN_EXAMPLE
,* [[http://example.com][My favorite website]]
  :PROPERTIES:
  :USERNAME: leandro
  :PASSWORD: chunky-tempeh
  :END:
,* SSH key
  :PROPERTIES:
  :PASSWORD: tofu
  :END:
#+END_EXAMPLE

新しいエントリを追加するには *M-RET* で見出しを作成し、
*C-c C-x P* (*org-set-property-and-value)* で
USERNAME, PASSWORDプロパティを追加します。

*M-x org-password-manager-get-username* でUSERNAMEを得、
*M-x org-password-manager-get-password* でPASSWORDを得ます、

これらはpassword.org.gpg内ならば現在の見出しに対応する
USERNAME/PASSWORDを得ますが、外ならば *org-agenda-files* に
登録されたファイルから探索されます。

*M-x org-password-manager-generate-password* は
[[http://sourceforge.net/projects/pwgen/][pwgen]] プログラムを使ってランダムパスワードを作成し、
カレントバッファに挿入します。

pwgenはDebian系列のGNU/Linuxならばaptからインストールできます。
# (progn (forward-line 1)(shell-command "screenshot-time.rb org_template" t))
#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150606074116.png]]
Fig1: password.org.gpgを開くときにはGnuPGのパスフレーズを訊かれる

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150606074121.png]]
Fig2: サイトを選択

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150606074125.png]]
Fig3: パスワードがクリップボードにコピーされる

org-modeの用途のひとつとしてこんなのもアリではないでしょうか。
** org-password-manager インストール
このパッケージはmelpaにあるので [[http://rubikitch.com/package-initialize][パッケージの初期設定]] を行ってください。

M-x package-refresh-contents
M-x package-install org-password-manager


#+end:
** 概要                                                             :noexport:
*org-password-manager.el* は、[[http://rubikitch.com/2015/03/29/passthword/][passthword.el(レビュー)]] や
[[http://rubikitch.com/2014/09/28/id-manager/][id-manager.el(レビュー)]] のようなパスワードマネージャーです。

特徴はorg-modeのプロパティ使っていることです。

プロパティは普段は非表示になっているので、
パスワードを隠すにはうってつけです。

でも、orgファイルそのものをemacs以外で見られたら意味がない？

大丈夫です。

~/org/password.org.gpgのように.gpgとつければ
GnuPGで暗号化してくれるので外からは見えません！

GnuPGのパスフレーズが事実上マスターパスワードになります。

password.org.gpgは以下のような内容です。

#+BEGIN_EXAMPLE
,* [[http://example.com][My favorite website]]
  :PROPERTIES:
  :USERNAME: leandro
  :PASSWORD: chunky-tempeh
  :END:
,* SSH key
  :PROPERTIES:
  :PASSWORD: tofu
  :END:
#+END_EXAMPLE

新しいエントリを追加するには *M-RET* で見出しを作成し、
*C-c C-x P* (*org-set-property-and-value)* で
USERNAME, PASSWORDプロパティを追加します。

*M-x org-password-manager-get-username* でUSERNAMEを得、
*M-x org-password-manager-get-password* でPASSWORDを得ます、

これらはpassword.org.gpg内ならば現在の見出しに対応する
USERNAME/PASSWORDを得ますが、外ならば *org-agenda-files* に
登録されたファイルから探索されます。

*M-x org-password-manager-generate-password* は
[[http://sourceforge.net/projects/pwgen/][pwgen]] プログラムを使ってランダムパスワードを作成し、
カレントバッファに挿入します。

pwgenはDebian系列のGNU/Linuxならばaptからインストールできます。
# (progn (forward-line 1)(shell-command "screenshot-time.rb org_template" t))
#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150606074116.png]]
Fig4: password.org.gpgを開くときにはGnuPGのパスフレーズを訊かれる

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150606074121.png]]
Fig5: サイトを選択

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150606074125.png]]
Fig6: パスワードがクリップボードにコピーされる

org-modeの用途のひとつとしてこんなのもアリではないでしょうか。

** 設定 [[http://rubikitch.com/f/150606071505.org-password-manager.el][150606071505.org-password-manager.el(以下のコードと同一)]]
#+BEGIN: include :file "/r/sync/junk/150606/150606071505.org-password-manager.el"
#+BEGIN_SRC fundamental
;;; これを入れないと毎回パスフレーズを訊かれてうざいw
(setq epa-file-cache-passphrase-for-symmetric-encryption t)

(require 'org-agenda)
(push "~/org/password.org.gpg" org-agenda-files)
#+END_SRC

#+END:

** 実行方法
#+BEGIN_EXAMPLE
$ wget http://rubikitch.com/f/150606071505.org-password-manager.el
$ emacs -Q -f package-initialize -l 150606071505.org-password-manager.el
#+END_EXAMPLE
