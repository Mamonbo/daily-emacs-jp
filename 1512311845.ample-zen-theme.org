#+BLOG: rubikitch
#+POSTID: 2301
#+DATE: [2015-12-31 木 18:45]
#+PERMALINK: ample-zen-theme
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil \n:t -:nil
#+ISPAGE: nil
#+DESCRIPTION:
# (progn (erase-buffer)(find-file-hook--org2blog/wp-mode))
#+BLOG: rubikitch
#+CATEGORY: Emacs, theme
#+EL_PKG_NAME: ample-zen-theme
#+EL_TAGS: emacs, %p, %p.el, emacs lisp %p, elisp %p, emacs %f %p, emacs %p 使い方, emacs %p 設定, emacs パッケージ %p, emacs %p スクリーンショット, color-theme, カラーテーマ
#+EL_TITLE: Emacs Lisp Elisp パッケージ インストール 設定 使い方 スクリーンショット
#+EL_TITLE0: ampleとzenburnを組み合わせたダークなカラーテーマ
#+EL_URL: 
#+begin: org2blog
#+DESCRIPTION: MELPAのEmacs Lispパッケージample-zen-themeの紹介
#+MYTAGS: package:ample-zen-theme, emacs 使い方, emacs コマンド, emacs, ample-zen-theme, ample-zen-theme.el, emacs lisp ample-zen-theme, elisp ample-zen-theme, emacs melpa ample-zen-theme, emacs ample-zen-theme 使い方, emacs ample-zen-theme 設定, emacs パッケージ ample-zen-theme, emacs ample-zen-theme スクリーンショット, color-theme, カラーテーマ
#+TAGS: package:ample-zen-theme, emacs 使い方, emacs コマンド, emacs, ample-zen-theme, ample-zen-theme.el, emacs lisp ample-zen-theme, elisp ample-zen-theme, emacs melpa ample-zen-theme, emacs ample-zen-theme 使い方, emacs ample-zen-theme 設定, emacs パッケージ ample-zen-theme, emacs ample-zen-theme スクリーンショット, color-theme, カラーテーマ, Emacs, theme, ample-zen-theme.el
#+TITLE: emacs ample-zen-theme.el : ampleとzenburnを組み合わせたダークなカラーテーマ | MELPA Emacs Lisp Elisp パッケージ インストール 設定 使い方 スクリーンショット
#+BEGIN_HTML
<table>
<tr><td>パッケージ名</td><td>ample-zen-theme</td></tr>
<tr><td>概要(原文)</td><td>AmpleZen Theme for Emacs 24</td></tr>
<tr><td>リポジトリ</td><td><a href="http://melpa.org/">MELPA</a></td></tr>
<tr><td>取得先</td><td><a href="https://github.com/mjwall/ample-zen">https://github.com/mjwall/ample-zen</a></td></tr>
<tr><td>バージョン</td><td>20150119.1354</td></tr>
<tr><td>関連記事</td><td><a href="http://rubikitch.com/tag/package:ample-zen-theme/">package:ample-zen-theme</a> </td></tr>
</table>
<br />
#+END_HTML
*ample-zen-theme.el* は、以下のパッケージに対応したカラーテーマです。
- link
- header-line
- mode-line
- compilation
- grep
- isearch
- font lock
- anzu
- full-ack
- auctex
- auto-complete
- android mode
- clojure-test-mode
- diff
- ediff
- eshell
- flx
- flycheck
- flymake
- flyspell
- erc
- git-gutter
- git-gutter-fr
- gnus
- hl-line-mode
- hl-sexp
- ido-mode
- jabber-mode
- linum-mode
- magit
- message-mode
- mic-paren
- nav
- mu4e
- org-mode
- outline
- p4
- powerline
- rainbow-delimiters
- rbenv
- rcirc
- rpm-mode
- rst-mode
- show-paren
- sml-mode-line
- SLIME
- term
- volatile-highlights
- emacs-w3m
- web-mode
- whitespace-mode
- which-func-mode
- ansi-color
- fill-column-indicator
- vc-annotate
** ample-zen-theme インストール
このパッケージはmelpaにあるので [[http://rubikitch.com/package-initialize][パッケージの初期設定]] を行ってください。

M-x package-refresh-contents
M-x package-install ample-zen-theme


#+end:
** 概要                                                             :noexport:
*ample-zen-theme.el* は、以下のパッケージに対応したカラーテーマです。
- link
- header-line
- mode-line
- compilation
- grep
- isearch
- font lock
- anzu
- full-ack
- auctex
- auto-complete
- android mode
- clojure-test-mode
- diff
- ediff
- eshell
- flx
- flycheck
- flymake
- flyspell
- erc
- git-gutter
- git-gutter-fr
- gnus
- hl-line-mode
- hl-sexp
- ido-mode
- jabber-mode
- linum-mode
- magit
- message-mode
- mic-paren
- nav
- mu4e
- org-mode
- outline
- p4
- powerline
- rainbow-delimiters
- rbenv
- rcirc
- rpm-mode
- rst-mode
- show-paren
- sml-mode-line
- SLIME
- term
- volatile-highlights
- emacs-w3m
- web-mode
- whitespace-mode
- which-func-mode
- ansi-color
- fill-column-indicator
- vc-annotate

** スクリーンショット
# (save-window-excursion (async-shell-command "emacs-test -eval '(load-theme (quote ample-zen) t)'"))
# (progn (forward-line 1)(shell-command "screenshot-time.rb org_theme_template" t))
#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20151231184628.png]]
Fig1: emacs-lisp-mode

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20151231184632.png]]
Fig2: magit

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20151231184634.png]]
Fig3: grep

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20151231184636.png]]
Fig4: outline-mode

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20151231184637.png]]
Fig5: org-mode

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20151231184639.png]]
Fig6: dired

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20151231184641.png]]
Fig7: web-mode

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20151231184642.png]]
Fig8: markdown-mode

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20151231184645.png]]
Fig9: helm


#+ATTR_HTML: :width 480
[[https://raw.github.com/mjwall/ample-zen/master/ample-zen.png]]
Fig10: 本家スクリーンショット



** 設定
#+BEGIN_SRC fundamental
(load-theme 'ample-zen t)
#+END_SRC

** 実行方法
#+BEGIN_EXAMPLE
$ emacs -Q -f package-initialize -eval '(load-theme (quote ample-zen) t)'
#+END_EXAMPLE

# (progn (forward-line 1)(shell-command "screenshot-time.rb org_template" t))
