#+BLOG: rubikitch
#+POSTID: 1895
#+DATE: [2015-08-13 Thu 19:20]
#+PERMALINK: planet-theme
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil \n:t -:nil
#+ISPAGE: nil
#+DESCRIPTION:
# (progn (erase-buffer)(find-file-hook--org2blog/wp-mode))
#+BLOG: rubikitch
#+CATEGORY: Emacs, theme
#+EL_PKG_NAME: planet-theme
#+EL_TAGS: emacs, %p, %p.el, emacs lisp %p, elisp %p, emacs %f %p, emacs %p 使い方, emacs %p 設定, emacs パッケージ %p, emacs %p スクリーンショット, color-theme, カラーテーマ
#+EL_TITLE: Emacs Lisp Elisp パッケージ インストール 設定 使い方 スクリーンショット
#+EL_TITLE0: GMailのPlanetsからインスパイアされたダークなカラーテーマ
#+EL_URL: 
#+begin: org2blog
#+DESCRIPTION: MELPAのEmacs Lispパッケージplanet-themeの紹介
#+MYTAGS: package:planet-theme, emacs 使い方, emacs コマンド, emacs, planet-theme, planet-theme.el, emacs lisp planet-theme, elisp planet-theme, emacs melpa planet-theme, emacs planet-theme 使い方, emacs planet-theme 設定, emacs パッケージ planet-theme, emacs planet-theme スクリーンショット, color-theme, カラーテーマ
#+TAGS: package:planet-theme, emacs 使い方, emacs コマンド, emacs, planet-theme, planet-theme.el, emacs lisp planet-theme, elisp planet-theme, emacs melpa planet-theme, emacs planet-theme 使い方, emacs planet-theme 設定, emacs パッケージ planet-theme, emacs planet-theme スクリーンショット, color-theme, カラーテーマ, Emacs, theme, planet-theme.el
#+TITLE: emacs planet-theme.el : GMailのPlanetsからインスパイアされたダークなカラーテーマ | MELPA Emacs Lisp Elisp パッケージ インストール 設定 使い方 スクリーンショット
#+BEGIN_HTML
<table>
<tr><td>パッケージ名</td><td>planet-theme</td></tr>
<tr><td>概要(原文)</td><td>A dark theme inspired by Gmail's 'Planets' theme of yore</td></tr>
<tr><td>リポジトリ</td><td><a href="http://melpa.org/">MELPA</a></td></tr>
<tr><td>取得先</td><td><a href="https://github.com/cmack/emacs-planet-theme">https://github.com/cmack/emacs-planet-theme</a></td></tr>
<tr><td>バージョン</td><td>20150627.751</td></tr>
<tr><td>関連記事</td><td><a href="http://rubikitch.com/tag/package:planet-theme/">package:planet-theme</a> </td></tr>
</table>
<br />
#+END_HTML
*planet-theme.el* は、カラーテーマです。

# (save-window-excursion (async-shell-command "emacs-test -eval '(load-theme (quote planet) t)'"))
以下のパッケージに対応しています。
- mode-line
- font-lock
- slime
- js2-mode
- cperl
- diff
- magit
- erc
- show-paren
- widgets
- custom
- speedbar
- ido
- helm
- company

# (progn (forward-line 1)(shell-command "screenshot-time.rb org_theme_template" t))
#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150813192256.png]]
Fig1: emacs-lisp-mode

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150813192302.png]]
Fig2: magit

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150813192307.png]]
Fig3: grep

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150813192310.png]]
Fig4: outline-mode

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150813192314.png]]
Fig5: org-mode

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150813192317.png]]
Fig6: dired

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150813192321.png]]
Fig7: web-mode

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150813192324.png]]
Fig8: markdown-mode

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150813192330.png]]
Fig9: helm


[[https://raw.github.com/cmack/emacs-planet-theme/master/screenshot1.png][本家スクリーンショット1]]
[[https://raw.github.com/cmack/emacs-planet-theme/master/screenshot2.png][本家スクリーンショット2]]
** planet-theme インストール
このパッケージはmelpaにあるので [[http://rubikitch.com/package-initialize][パッケージの初期設定]] を行ってください。

M-x package-refresh-contents
M-x package-install planet-theme


#+end:
** 概要                                                             :noexport:
*planet-theme.el* は、カラーテーマです。

# (save-window-excursion (async-shell-command "emacs-test -eval '(load-theme (quote planet) t)'"))
以下のパッケージに対応しています。
- mode-line
- font-lock
- slime
- js2-mode
- cperl
- diff
- magit
- erc
- show-paren
- widgets
- custom
- speedbar
- ido
- helm
- company

# (progn (forward-line 1)(shell-command "screenshot-time.rb org_theme_template" t))
#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150813192256.png]]
Fig10: emacs-lisp-mode

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150813192302.png]]
Fig11: magit

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150813192307.png]]
Fig12: grep

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150813192310.png]]
Fig13: outline-mode

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150813192314.png]]
Fig14: org-mode

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150813192317.png]]
Fig15: dired

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150813192321.png]]
Fig16: web-mode

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150813192324.png]]
Fig17: markdown-mode

#+ATTR_HTML: :width 480
[[file:/r/sync/screenshots/20150813192330.png]]
Fig18: helm


[[https://raw.github.com/cmack/emacs-planet-theme/master/screenshot1.png][本家スクリーンショット1]]
[[https://raw.github.com/cmack/emacs-planet-theme/master/screenshot2.png][本家スクリーンショット2]]

** 設定
#+BEGIN_SRC fundamental
(load-theme 'planet t)
#+END_SRC

** 実行方法
#+BEGIN_EXAMPLE
$ emacs -Q -f package-initialize -eval '(load-theme (quote planet) t)'
#+END_EXAMPLE

# (progn (forward-line 1)(shell-command "screenshot-time.rb org_template" t))
