#+BLOG: rubikitch
#+POSTID: 682
#+DATE: [2014-12-09 Tue 03:12]
#+PERMALINK: relative-buffers
#+OPTIONS: toc:nil num:nil todo:nil pri:nil tags:nil ^:nil \n:t -:nil
#+ISPAGE: nil
#+DESCRIPTION:
# (progn (erase-buffer)(find-file-hook--org2blog/wp-mode))
#+BLOG: rubikitch
#+CATEGORY: Emacs
#+EL_PKG_NAME: relative-buffers
#+EL_TAGS: emacs, emacs lisp %p, elisp %p, emacs %f %p, emacs %p 使い方, emacs %p 設定, emacs パッケージ %p, emacs %p スクリーンショット, relate:dired, relate:python, relate:projectile, relate:uniquify
#+EL_TITLE: Emacs Lisp Elisp パッケージ インストール 設定 使い方 スクリーンショット
#+EL_TITLE0: バッファ名をプロジェクトの相対パスに自動的にリネームする
#+begin: org2blog
#+DESCRIPTION: MELPAのEmacs Lispパッケージrelative-buffersの紹介
#+MYTAGS: package:relative-buffers, emacs 使い方, emacs コマンド, emacs, emacs lisp relative-buffers, elisp relative-buffers, emacs melpa relative-buffers, emacs relative-buffers 使い方, emacs relative-buffers 設定, emacs パッケージ relative-buffers, emacs relative-buffers スクリーンショット, relate:dired, relate:python, relate:projectile, relate:uniquify
#+TITLE: emacs relative-buffers.el : バッファ名をプロジェクトの相対パスに自動的にリネームする | MELPA Emacs Lisp Elisp パッケージ インストール 設定 使い方 スクリーンショット
#+BEGIN_HTML
<table>
<tr><td>パッケージ名</td><td>relative-buffers</td></tr>
<tr><td>概要(原文)</td><td>Emacs buffers naming convention</td></tr>
<tr><td>リポジトリ</td><td><a href="http://melpa.org/">MELPA</a></td></tr>
<tr><td>取得先</td><td><a href="https://github.com/proofit404/relative-buffers">https://github.com/proofit404/relative-buffers</a></td></tr>
<tr><td>バージョン</td><td>20141119.1335</td></tr>
<tr><td>関連記事</td><td><a href="http://rubikitch.com/tag/package:relative-buffers/">package:relative-buffers</a> <a href="http://rubikitch.com/tag/package:dired/">package:dired</a> <a href="http://rubikitch.com/tag/package:python/">package:python</a> <a href="http://rubikitch.com/tag/package:projectile/">package:projectile</a> <a href="http://rubikitch.com/tag/package:uniquify/">package:uniquify</a></td></tr>
</table>
<br />
#+END_HTML
*relative-buffers.el* は、バッファ名を自動的に
*プロジェクトルート* からの相対パスにリネームするパッケージです。

現時点では *git* と *mercurial* に対応しています。

*Python* と *dired* に対しては独自の処理を施しています。

バッファ名の自動リネームといえば [[http://rubikitch.com/2014/10/22/emacs244-edit-changes/][Emacs 24.4でデフォルトになった]]
*uniquify* がありますが、ちゃんと共存できます。

「プロジェクトルート」の発見方法は.gitか.hgの存在する
ディレクトリを見て判別する独自コードです。

よって *projectile* などで複雑なロジックを
使っている人には物足りないかもしれません。
** relative-buffers インストール
このパッケージはmelpaにあるので [[http://rubikitch.com/package-initialize][パッケージの初期設定]] を行ってください。

M-x package-refresh-contents
M-x package-install relative-buffers


#+end:
** 概要                                                             :noexport:
*relative-buffers.el* は、バッファ名を自動的に
*プロジェクトルート* からの相対パスにリネームするパッケージです。

現時点では *git* と *mercurial* に対応しています。

*Python* と *dired* に対しては独自の処理を施しています。

バッファ名の自動リネームといえば [[http://rubikitch.com/2014/10/22/emacs244-edit-changes/][Emacs 24.4でデフォルトになった]]
*uniquify* がありますが、ちゃんと共存できます。

「プロジェクトルート」の発見方法は.gitか.hgの存在する
ディレクトリを見て判別する独自コードです。

よって *projectile* などで複雑なロジックを
使っている人には物足りないかもしれません。
** 設定 [[http://rubikitch.com/f/141209031019.relative-buffers.el][141209031019.relative-buffers.el(以下のコードと同一)]]
#+BEGIN: include :file "/r/sync/junk/141209/141209031019.relative-buffers.el"
#+BEGIN_SRC fundamental
(global-relative-buffers-mode)
#+END_SRC

#+END:

** 実行方法
#+BEGIN_EXAMPLE
$ wget http://rubikitch.com/f/141209031019.relative-buffers.el
$ emacs -Q -f package-initialize -l 141209031019.relative-buffers.el
#+END_EXAMPLE

# (progn (forward-line 1)(shell-command "screenshot-time.rb org_template" t))
http://rubikitch.com/f/20141209031751.png
Fig1: ビフォー

http://rubikitch.com/f/20141209031758.png
Fig2: アフター
